<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Classification on DFS</title>
    <link>/categories/classification/</link>
    <description>Recent content in Classification on DFS</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 19 Aug 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/categories/classification/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Supervised Learning in R: Classification</title>
      <link>/blog/2020/08/19/2020-08-19-supervised-learning-in-r-classification/</link>
      <pubDate>Wed, 19 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/2020/08/19/2020-08-19-supervised-learning-in-r-classification/</guid>
      <description>Chapter 1 - k-Nearest Neighbors (kNN)1.1 - Recognizing a road sign with kNNAfter several trips with a human behind the wheel, it is time for the self-driving car to attempt the test course alone.
As it begins to drive away, its camera captures the following image:
Figure 1: A captionCan you apply a kNN classifier to help the car recognize this sign?
The dataset signs must be loaded in your workspace along with the dataframe next_sign, which holds the observation you want to classify.</description>
    </item>
    
    <item>
      <title>Supervised Learning in R: Classification</title>
      <link>/post/2020-08-19-supervised-learning-in-r-classification/</link>
      <pubDate>Wed, 19 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/2020-08-19-supervised-learning-in-r-classification/</guid>
      <description>Source: this material was obtained by DataCamp.
Chapter 1 - k-Nearest Neighbors (kNN)1.1 - Recognizing a road sign with kNNAfter several trips with a human behind the wheel, it is time for the self-driving car to attempt the test course alone.
As it begins to drive away, its camera captures the following image:
Figure 1: A captionCan you apply a kNN classifier to help the car recognize this sign?</description>
    </item>
    
    <item>
      <title>Credit Card Fraud Detection</title>
      <link>/blog/2020/03/26/2020-03-26-credit-card-fraud-detection/</link>
      <pubDate>Thu, 26 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/2020/03/26/2020-03-26-credit-card-fraud-detection/</guid>
      <description>ObjectiveOur goal is to train a Neural Network to detect fraudulent credit card transactions in a dataset referring to two days transactions by european cardholders.
Source: https://www.kaggle.com/mlg-ulb/creditcardfraud/data
Datacredit = read.csv(path)The datasets contains transactions made by credit cards in September 2013 by european cardholders.This dataset presents transactions that occurred in two days.
As we can see, this dataset consists of thirty explanatory variables, and a response variable which represents whether a transation was a fraud or not.</description>
    </item>
    
    <item>
      <title>German Credit and Regression Tree</title>
      <link>/post/german-credit-and-regression-tree/</link>
      <pubDate>Thu, 06 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/german-credit-and-regression-tree/</guid>
      <description>ObjetiveTrain a model and use to make predictions for German Credit dataset
Datagerman = read.csv(path)str(german)## &amp;#39;data.frame&amp;#39;: 1000 obs. of 21 variables:## $ default : int 0 1 0 0 1 0 0 0 0 1 ...## $ account_check_status : Factor w/ 4 levels &amp;quot;&amp;lt; 0 DM&amp;quot;,&amp;quot;&amp;gt;= 200 DM / salary assignments for at least 1 year&amp;quot;,..: 1 3 4 1 1 4 4 3 4 3 .</description>
    </item>
    
    <item>
      <title>Classifying using Logistic Regression</title>
      <link>/blog/2020/01/13/2020-01-13-classifying-using-logistic-regression/</link>
      <pubDate>Mon, 13 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/2020/01/13/2020-01-13-classifying-using-logistic-regression/</guid>
      <description>1 - ObjectiveThe objective of this example is to identify each of a number of benign or malignant classes.
2 - DataLet’s getting the data.
BCData &amp;lt;- read.table(url(&amp;quot;https://archive.ics.uci.edu/ml/machine-learning-databases/breast-cancer-wisconsin/breast-cancer-wisconsin.data&amp;quot;), sep = &amp;quot;,&amp;quot;)# setting column namesnames(BCData)&amp;lt;- c(&amp;#39;Id&amp;#39;, &amp;#39;ClumpThickness&amp;#39;, &amp;#39;CellSize&amp;#39;,&amp;#39;CellShape&amp;#39;, &amp;#39;MarginalAdhesion&amp;#39;,&amp;#39;SECellSize&amp;#39;, &amp;#39;BareNuclei&amp;#39;,&amp;#39;BlandChromatin&amp;#39;,&amp;#39;NormalNucleoli&amp;#39;,&amp;#39;Mitoses&amp;#39;,&amp;#39;Class&amp;#39;)3 - EDA - Exploratory Data AnalysisIt’s important to extract prelimionary knowledge from the dataset.
dim(BCData)## [1] 699 11str(BCData)## &amp;#39;data.</description>
    </item>
    
  </channel>
</rss>