<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Programming on DFS</title>
    <link>/tags/programming/</link>
    <description>Recent content in Programming on DFS</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 29 Feb 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/programming/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>A Game of Chance</title>
      <link>/blog/2020/02/29/2020-02-29-a-game-of-chance/</link>
      <pubDate>Sat, 29 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/2020/02/29/2020-02-29-a-game-of-chance/</guid>
      <description>&amp;quot;&amp;quot;&amp;quot;Simulating the dice game Craps&amp;quot;&amp;quot;&amp;quot;## &amp;#39;Simulating the dice game Craps&amp;#39;import randomdef roll_dice():&amp;quot;&amp;quot;&amp;quot;Roll two dice and return their face values as a tuple.&amp;quot;&amp;quot;&amp;quot;die1 = random.randrange(1,7)die2 = random.randrange(1,7)return (die1, die2)def display_dice(dice):&amp;quot;&amp;quot;&amp;quot;Display one roll of the two dice.&amp;quot;&amp;quot;&amp;quot;die1, die2 = diceprint(f&amp;#39;Player rolled {die1} + {die2} = {sum(dice)}&amp;#39;)die_values = roll_dice() #first rolldisplay_dice(die_values)# determine game status and point, based on first roll.</description>
    </item>
    
    <item>
      <title>Functions</title>
      <link>/blog/2020/02/29/2020-03-01-functions/</link>
      <pubDate>Sat, 29 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/2020/02/29/2020-03-01-functions/</guid>
      <description>1. Defining functionsdef square(number):print(&amp;quot;The square of&amp;quot;, number, &amp;quot;is&amp;quot;, number ** 2)square(7)## The square of 7 is 492. Functions with multiple parametersdef maximum(value1, value2, value3):max_value = value1if value2 &amp;gt; max_value:max_value = value2if value3 &amp;gt; max_value:max_value = value3return max_valuemaximum(12, 27, 36)## 36maximum(&amp;#39;yellow&amp;#39;, &amp;#39;red&amp;#39;, &amp;#39;orange&amp;#39;)## &amp;#39;yellow&amp;#39;3. Random-Number Generationimport randomrandom.</description>
    </item>
    
    <item>
      <title>Binary Search Algorithm</title>
      <link>/blog/2019/12/28/2019-12-28-binary-search/</link>
      <pubDate>Sat, 28 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>/blog/2019/12/28/2019-12-28-binary-search/</guid>
      <description>def binary_search(lista, item):low = 0 # low and high are part of the list thar you are searching forhigh = len(lista) - 1while low &amp;lt;= high: #while you are not achieving one unique elementmiddle = (low + high) // 2 # checking the central elementguess = lista[middle]if guess == item:return middleif guess &amp;gt; item: # the guess are too highhigh = middle - 1else: # the guess are too lowlow = middle + 1return Nonemy_list = [1, 3, 5, 7, 9]print(binary_search(my_list, 3))## 1print(binary_search(my_list, -1))## None</description>
    </item>
    
    <item>
      <title>Quicksort Algorithm</title>
      <link>/blog/2019/12/26/2019-12-27-quicksort-algorithm/</link>
      <pubDate>Thu, 26 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>/blog/2019/12/26/2019-12-27-quicksort-algorithm/</guid>
      <description>def quicksort(array):if len(array) &amp;lt; 2:return arrayelse:pivo = array[0] # caso recursivomenores = [i for i in array [1:] if i &amp;lt;= pivo] # subarray de todos os elementos menores do que o pivomaiores = [i for i in array[1:] if i &amp;gt; pivo] # subarray de todos os elementos maiores do que o pivoreturn quicksort(menores) + [pivo] + quicksort(maiores)print(quicksort([10, 5, 2, 3]))## [2, 3, 5, 10]</description>
    </item>
    
    <item>
      <title>Linked post</title>
      <link>/blog/2015/10/02/linked-post/</link>
      <pubDate>Fri, 02 Oct 2015 21:49:20 +0200</pubDate>
      
      <guid>/blog/2015/10/02/linked-post/</guid>
      <description>I&#39;m a linked post in the menu. You can add other posts by adding the following line to the frontmatter:
menu = &amp;quot;main&amp;quot;  Lorem ipsum dolor sit amet, consectetur adipiscing elit. In mauris nulla, vestibulum vel auctor sed, posuere eu lorem. Aliquam consequat augue ut accumsan mollis. Suspendisse malesuada sodales tincidunt. Vivamus sed erat ac augue bibendum porta sed id ipsum. Ut mollis mauris eget ligula sagittis cursus. Aliquam id pharetra tellus.</description>
    </item>
    
  </channel>
</rss>