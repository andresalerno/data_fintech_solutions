<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>models on DFS</title>
    <link>/tags/models/</link>
    <description>Recent content in models on DFS</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 22 Apr 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/models/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Deploying R Model as API Web Service using Docker and Microsoft Azure</title>
      <link>/blog/2020/04/22/2020-04-22-deploying-r-model-as-api-web-service-using-docker-and-microsoft-azure/</link>
      <pubDate>Wed, 22 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/2020/04/22/2020-04-22-deploying-r-model-as-api-web-service-using-docker-and-microsoft-azure/</guid>
      <description>ObjectiveOur goal here is to create a R Model and put-in into production by deploying it as web service API using Docker to containerize (encapsulate) it and Microsoft Azure to host it.
R ModelTo create the model, we going to use mtcars dataset which oneâ€™s is present inside R.
head(mtcars)## mpg cyl disp hp drat wt qsec vs am gear carb## Mazda RX4 21.0 6 160 110 3.</description>
    </item>
    
    <item>
      <title>Exponential Smoothing Model</title>
      <link>/blog/2019/12/18/2019-12-21-exponential-smoothing-model/</link>
      <pubDate>Wed, 18 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>/blog/2019/12/18/2019-12-21-exponential-smoothing-model/</guid>
      <description>IntroductionThe main idea here is breaking the ice in terms of exponential smoothing models
First of all it is importan to show some behaviours patterns usually found in time series
Trends: it is usually observed when the time series follow one specific direction. It can be linear or not.
Seasonality: it is a pattern that repeat in a certain times (specific period)
Cycle: Like seasonality but it appears in non specific time</description>
    </item>
    
    <item>
      <title>Linear Regression</title>
      <link>/blog/2019/12/18/2019-12-18-linear-regression/</link>
      <pubDate>Wed, 18 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>/blog/2019/12/18/2019-12-18-linear-regression/</guid>
      <description>DataWe are using the MASS library that contains the Boston dataset. These records measure the median house value for 506 neighborhoods around Boston.
library(MASS)data &amp;lt;- MASS::Bostonfix(Boston)names(Boston)## [1] &amp;quot;crim&amp;quot; &amp;quot;zn&amp;quot; &amp;quot;indus&amp;quot; &amp;quot;chas&amp;quot; &amp;quot;nox&amp;quot; &amp;quot;rm&amp;quot; &amp;quot;age&amp;quot; ## [8] &amp;quot;dis&amp;quot; &amp;quot;rad&amp;quot; &amp;quot;tax&amp;quot; &amp;quot;ptratio&amp;quot; &amp;quot;black&amp;quot; &amp;quot;lstat&amp;quot; &amp;quot;medv&amp;quot;A simple Linear RegressionWe are using the lm() function to fit a simple linear regression model. The medv is a response variable and lstat the predictor variable.</description>
    </item>
    
    <item>
      <title>Linear Regression</title>
      <link>/post/linear-regression/</link>
      <pubDate>Wed, 18 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/linear-regression/</guid>
      <description>testeThis is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown s
</description>
    </item>
    
  </channel>
</rss>